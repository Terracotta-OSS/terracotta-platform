plugins {
  id 'org.terracotta.build.convention.java-library'
  id 'org.terracotta.build.convention.voltron'
}

configurations {
  pluginsImpl 
  pluginsApi 
}

dependencies {
  testImplementation "org.slf4j:slf4j-simple:$slf4jVersion"

  testImplementation project(':common:json')
  testImplementation project(':diagnostic:client')
  testImplementation project(':management:entities:nms:client')
  testImplementation project(':management:entities:nms-agent:client')
  testImplementation project(':management:testing:entity')
  testImplementation "org.terracotta.internal:client-runtime:$terracottaRuntimeVersion"
  testCompileOnly "org.terracotta:client-api:$terracottaApisVersion"
  testImplementation project(':dynamic-config:testing:galvan')
  testImplementation "org.terracotta:server-api:$terracottaApisVersion"
  testImplementation project(":lease:client")

  pluginsApi project(':dynamic-config:api')
  pluginsApi project(':management:server:api')
  pluginsApi project(':resources:offheap')
  pluginsApi project(':dynamic-config:server:api')
  pluginsApi project(':diagnostic:server:api')
  pluginsApi project(':management:server:api')
  pluginsApi project(':common:json')

  pluginsImpl project(':dynamic-config:entities:management:server')
  pluginsImpl project(':dynamic-config:entities:nomad:server')
  pluginsImpl project(':dynamic-config:entities:topology:server')
  pluginsImpl project(':dynamic-config:server:config-provider')
  pluginsImpl project(':dynamic-config:server:services')
  pluginsImpl project(':management:testing:entity')
  pluginsImpl project(':management:entities:nms:server')
  pluginsImpl project(':management:entities:nms-agent:server')
  pluginsImpl project(':management:server:services')
  pluginsImpl project(':lease:server')
  pluginsImpl project(':client-message-tracker')
  pluginsImpl project(':diagnostic:server:services')
  pluginsImpl project(':platform-base')
}

sourceSets {
  test {
    copyright {
      exclude '**/*.txt'
    }
  }
}

test {
  jvmArgs "-XX:MaxDirectMemorySize=2048m"
    systemProperty "galvan.plugin", layout.buildDirectory.dir("plugin").get().toString()
    systemProperty "galvan.dir", layout.buildDirectory.dir("galvan").get().toString()
    systemProperty "galvan.server", layout.buildDirectory.dir("tmp/tcserver").get().toString()
}


task copyPluginsImpl(type: Copy) {
    from (configurations.pluginsImpl)
    into layout.buildDirectory.dir("plugin/lib")
}

task copyPluginsApi(type: Copy) {
    from (configurations.pluginsApi)
    into layout.buildDirectory.dir("plugin/api")
}

task serverClean(type: Delete) {
    delete layout.buildDirectory.dir("tmp/tcserver")
}

task pluginClean(type: Delete) {
    delete layout.buildDirectory.dir("plugin")
}

task galvanTestClean(type: Delete) {
    delete layout.buildDirectory.dir("galvan")
}

test.dependsOn(copyPluginsImpl)
copyPluginsImpl.dependsOn(copyPluginsApi)
copyPluginsApi.dependsOn(serverClean)
serverClean.dependsOn(pluginClean)
