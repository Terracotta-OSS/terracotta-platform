entityID=EntityID{className='org.terracotta.dynamic_config.entity.topology.client.DynamicTopologyEntity', entityName='dynamic-config-topology-entity'}
entityID=EntityID{className='org.terracotta.management.entity.nms.agent.client.NmsAgentEntity', entityName='NmsAgent'}
entityID=EntityID{className='org.terracotta.dynamic_config.entity.management.server.ManagementEntityServerService', entityName='dynamic-config-management-entity'}
active=true
entityID=EntityID{className='org.terracotta.nomad.entity.client.NomadEntity', entityName='nomad-entity'}
entityID=EntityID{className='org.terracotta.management.entity.nms.client.NmsEntity', entityName='DiagnosticIT'}
entityID=EntityID{className='org.terracotta.management.entity.sample.client.CacheEntity', entityName='pet-clinic/pets'}
entityID=EntityID{className='org.terracotta.management.entity.sample.client.CacheEntity', entityName='pet-clinic/clients'}
cacheName=pet-clinic/clients
cacheSize=0
  services=[
      org.terracotta.lease.service.LeaseServiceProvider={
        LeaseLength=150000
        LeaseState={
      org.terracotta.client.message.tracker.OOOMessageHandlerProvider={
      org.terracotta.diagnostic.server.DiagnosticServiceProvider={
        services=[
          org.terracotta.nomad.server.NomadServer
          org.terracotta.dynamic_config.api.service.DynamicConfigService
          org.terracotta.dynamic_config.api.service.TopologyService
      org.terracotta.management.service.monitoring.MonitoringServiceProvider={
        cluster={
          stripes=[
              id=SINGLE
              name=SINGLE
              servers=[
                  id=testServer0
                  serverEntities=[
                  serverName=testServer0
                  hostName=localhost
                  hostAddress=127.0.0.1
                  bindAddress=0.0.0.0
                  state=ACTIVE
      org.terracotta.platform.ServerInfoProvider={
        serverName=testServer0
      org.terracotta.dynamic_config.server.service.DynamicConfigServiceProvider={
      org.terracotta.diagnostic.server.extensions.LogicalServerStateServiceProvider={
        logicalServerState=ACTIVE
      org.terracotta.management.entity.sample.server.MapProvider={
        caches=[pet-clinic/clients, pet-clinic/pets]
      com.tc.services.PlatformServiceProvider={
        PlatformServiceImpl={
          tcServerState=State[ ACTIVE-COORDINATOR ]
          tcServerConfig=#User-defined configurations for node 'testServer0' in stripe ID 1
cluster-name=tc-cluster
offheap-resources=primary-server-resource\:64MB
stripe.1.node.1.data-dirs=
stripe.1.node.1.hostname=localhost
stripe.1.node.1.log-dir=logs
stripe.1.node.1.metadata-dir=
stripe.1.node.1.name=testServer0
stripe.1.node.1.tc-properties=terracotta.management.assert\:true
          tcServerDescriptionCapabilities=Open source capabilities
      com.tc.services.EntityMessengerProvider={
      com.tc.services.LocalMonitoringProducer={
  ExtendedConfigs={
    org.terracotta.dynamic_config.server.configuration.startup.StartupConfiguration={
      partialConfig=false
      unConfigured=false
      repairMode=false
      startupNodeContext={
        cluster={
          name=tc-cluster
          clientLeaseDuration={
            quantity=150
            unit=SECONDS
            type=TIME
          clientReconnectWindow={
            quantity=120
            unit=SECONDS
            type=TIME
          failoverPriority=availability
          offheapResources={
            primary-server-resource={
              quantity=64
              unit=MB
              type=MEMORY
          securitySslTls=false
          securityWhitelist=false
          stripes=[
              nodes=[
                  dataDirs={
                  nodeBindAddress=0.0.0.0
                  nodeGroupBindAddress=0.0.0.0
                  nodeHostname=localhost
                  nodeLogDir=logs
                  nodeLoggerOverrides={
                  nodeName=testServer0
                  tcProperties={
                    terracotta.management.assert=true
        nodeName=testServer0
        stripeId=1
        nodeId=1
    org.terracotta.entity.PlatformConfiguration={
      serverName=testServer0
      host=localhost
      tsaPort=
      ExtendedConfigs={
        org.terracotta.dynamic_config.server.configuration.service.ConfigChangeHandlerManagerImpl={
          configChangeHandlers={
            client-lease-duration=org.terracotta.lease.service.LeaseConfigChangeHandler
            client-reconnect-window=org.terracotta.dynamic_config.server.service.handler.ClientReconnectWindowConfigChangeHandler
            data-dirs=org.terracotta.config.data_roots.DataDirectoryConfigChangeHandler
            failover-priority=ConfigChangeHandler#accept()
            bind-address=org.terracotta.dynamic_config.server.service.handler.ServerAttributeConfigChangeHandler
            group-bind-address=org.terracotta.dynamic_config.server.service.handler.ServerAttributeConfigChangeHandler
            group-port=ConfigChangeHandler#accept()
            log-dir=org.terracotta.dynamic_config.server.service.handler.ServerAttributeConfigChangeHandler
            logger-overrides=org.terracotta.dynamic_config.server.service.handler.LoggerOverrideConfigChangeHandler
            public-hostname=ConfigChangeHandler#accept()
            public-port=ConfigChangeHandler#accept()
            offheap-resources=org.terracotta.offheapresource.OffheapResourceConfigChangeHandler
            tc-properties=org.terracotta.dynamic_config.server.api.SelectingConfigChangeHandler
        org.terracotta.dynamic_config.server.configuration.service.DynamicConfigServiceImpl={
          licensePath=
          hasLicenseFile=false
          configurationDir=
          activated=true
          mustBeRestarted=false
          runtimeNodeContext={
            cluster={
              name=tc-cluster
              clientLeaseDuration={
                quantity=150
                unit=SECONDS
                type=TIME
              clientReconnectWindow={
                quantity=120
                unit=SECONDS
                type=TIME
              failoverPriority=availability
              offheapResources={
                primary-server-resource={
                  quantity=64
                  unit=MB
                  type=MEMORY
              securitySslTls=false
              securityWhitelist=false
              stripes=[
                  nodes=[
                      dataDirs={
                      nodeBindAddress=0.0.0.0
                      nodeGroupBindAddress=0.0.0.0
                      nodeGroupPort=
                      nodeHostname=localhost
                      nodeLogDir=logs
                      nodeLoggerOverrides={
                      nodeName=testServer0
                      nodePort=
                      tcProperties={
                        terracotta.management.assert=true
            nodeName=testServer0
            stripeId=1
            nodeId=1
          upcomingNodeContext={
            cluster={
              name=tc-cluster
              clientLeaseDuration={
                quantity=150
                unit=SECONDS
                type=TIME
              clientReconnectWindow={
                quantity=120
                unit=SECONDS
                type=TIME
              failoverPriority=availability
              offheapResources={
                primary-server-resource={
                  quantity=64
                  unit=MB
                  type=MEMORY
              securitySslTls=false
              securityWhitelist=false
              stripes=[
                  nodes=[
                      dataDirs={
                      nodeBindAddress=0.0.0.0
                      nodeGroupBindAddress=0.0.0.0
                      nodeGroupPort=
                      nodeHostname=localhost
                      nodeLogDir=logs
                      nodeLoggerOverrides={
                      nodeName=testServer0
                      nodePort=
                      tcProperties={
                        terracotta.management.assert=true
            nodeName=testServer0
            stripeId=1
            nodeId=1
          Nomad={
            mode=ACCEPTING
            currentVersion=1
            highestVersion=1
            mutativeMessageCount=3
            lastMutationUser=
            lastMutationHost=
            lastMutationTimestamp=
          latestChange={
            uuid=
            state=COMMITTED
            creationUser=
            creationHost=
            creationTimestamp=
            version=1
            summary=Activating cluster
        org.terracotta.dynamic_config.server.api.PathResolver={
          baseDir=
        org.terracotta.offheapresource.OffHeapResourcesProvider={
          primary-server-resource={
            capacity=
            available=
        org.terracotta.config.data_roots.DataDirectoriesConfigImpl={
    ServiceProviderConfigurations={
      org.terracotta.lease.service.config.LeaseConfiguration={
        leaseLength=150000