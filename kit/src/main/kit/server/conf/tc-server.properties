#
# Copyright Terracotta, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# A set of basic configuration properties sufficient to run a simple 
# single-node cluster
#
# This file will not get used unless it is specifically passed to the 
# start-tc-server.sh script, upon which the properties here-in will be used to
# configure and start a Terracotta server (after which that server's config
# repository will contain the configuration, and this file should not be used
# for future starts of that server)
#
# These properties could all be sent through config-tool, or directly on the 
# start-tc-server command  line, but some users will find convenience in having
# them in a file
#
# See documentation for a more complete list of properties and a more complete
# description of them.


# The name of the cluster the node will be part of
cluster-name=tc-cluster

# In the case of inter-node communication failures, should the cluster favor:
#
# - 'availability' of service (at the potential loss of data consistency)
# - 'consistency' of data (at the potential loss of availability of service)
#
# ##### IMPORTANT: Storage use cases normally *require* 'consistency'  ######
#                  Data loss can occur otherwise.
#
# Caching use cases may prefer 'availabilty'
#
# With the consistency option you specify how many additional (non-server node)
# voters will participate in elections/quorum decisions. The number of nodes in 
# a stripe + the number of additional voters should be an odd number.
# So, for a two-node stripe you should run configure additional voter, i.e.:
# failover-priority=consistency:1
#
failover-priority=availability


# Configure the responsiveness of servers when detecting
# unresponsive/disconnected clients.  Longer values are more tolerant of
# transient delays in communication
#client-lease-duration=15s

# Indicates how much time (in seconds) a passive node taking over a failed 
# active node will wait for pre-existing clients to reconnect.
#client-reconnect-window=120s


# (Enterprise edition only)
# The directory containing security configuration artifacts
# (certificates, credentials, etc.)
#security-dir=/some/secure/path/terracotta-security

# (Enterprise edition only)
# The directory where security related audit logs will be written
#security-audit-log-dir=/some/secure/path/terracotta-security--audit-logs

# (Enterprise edition only)
# The authentication mechanism to be used.  Possible options include:
# 'file', 'ldap', 'certificate'
#security-authc=file

# (Enterprise edition only)
# Activate SSL on listening ports
#security-ssl-tls=false

# (Enterprise edition only)
# Activate the use of a file containing a white list of addresses (or address
# ranges)
#security-whitelist=false


# A comma-separated list of offheap (in-memory) resourse pools in which data
# data can be stored.
# Entries are associations of a logical name for the resource to its size
# in bytes (e.g. 'mypool:500MB,mystorage:250GB,mycaches:4GB')
offheap-resources=main:500MB

### Define stripes, and nodes within the stripes

# ## Stripe 1, Node 1

# The name to give the node
stripe.1.node.1.node-name=default-node1

# The RFC 1123 compliant hostname (or a valid IP address) of the node
stripe.1.node.1.node-hostname=localhost

# The address and port to bind the main communication port to
# defaults are:
#stripe.1.node.1.node-bind-address=0.0.0.0
#stripe.1.node.1.node-port=9410

# The address and port to bind the group communication port to
# defaults are:
#stripe.1.node.1.node-group-bind-address=0.0.0.0
#stripe.1.node.1.node-group-port=9430

# The directory in which to store node metadata (persistent state, etc.)
stripe.1.node.1.node-metadata-dir=%H/terracotta/default-node1/metadata

# A comma-separated list of directories in which stored data can be persisted.
# Entries are mappings of a logical name for the directory to the path of the 
# directory
stripe.1.node.1.data-dirs=main:%H/terracotta/default-node1/user-data

# The directory in which to write this node's logs
stripe.1.node.1.node-log-dir=%H/terracotta/default-node1/logs

# Base directory where backups will be placed
#stripe.1.node.1.node-backup-dir=%H/terracotta/default-node1/backups


# ## Stripe 1, Node 2

#stripe.1.node.2.node-name=default-node2
#stripe.1.node.2.node-hostname=myserver2.example.com
#stripe.1.node.2.node-bind-address=0.0.0.0
#stripe.1.node.2.node-port=9410
#stripe.1.node.2.node-group-bind-address=0.0.0.0
#stripe.1.node.2.node-group-port=9430
        
#stripe.1.node.2.node-metadata-dir=%H/terracotta/default-node2/metadata
#stripe.1.node.2.data-dirs=main:%H/terracotta/default-node2/user-data
#stripe.1.node.2.node-log-dir=%H/terracotta/default-node2/logs
#stripe.1.node.2.node-backup-dir=%H/terracotta/default-node2/backups


